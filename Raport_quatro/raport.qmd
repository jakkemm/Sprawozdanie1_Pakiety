---
title: "Analiza wyników w trójboju"
author: "Emil Olszewski, Jakub Kempa"
date: 2024-01-17
format: 
  html:
    page-layout: full
editor: visual
---

# 1. Wstęp

Przedmiotem analizy są dane ze zbioru zawierającego informacje na temat trójboistów zrzeszonch w ramach federacji IPF. [Dane](https://gitlab.com/openpowerlifting/opl-data) zostały udostępnione na warunkach licencji **GNU AGPLv3.** Głównymi zmiennymi, które będą nas interesować są **AgeClass, Sex** (zmienne kategoryczne określające przedział wiekowy zawodnika oraz jego płeć) oraz zmienne ciągłe **BodyweightKg, TotalKg,** które wyrażają masę ciała zawodnika, oraz wynik całkowity będący sumą wyników w poszczególnych bojach (*przysiad ze stangą, wyciskanie na ławce* oraz *martwy ciąg)*.

## 1.1 Pytania badawcze

W ramach analizy postaramy się odpowiedzieć na następujące pytania:

1.  Czy istnieje zależność między wagą a wynikiem całkowitym?

2.  Jakie parametry opisują rozkłady poszczególnych zmiennych?

3.  W jaki sposób różnią się rozkłady wyniku oraz wagi w zależności od wieku i płci?

# 2. Ładowanie danych

Wpierw przystąpimy do załadowania potrzebnych bibliotek

```{r}
#| warning: false
library(tidyverse)
```

Teraz odczytamy dane z pliku csv.

```{r}
probka <- read.csv("../powerlifting.csv")
```

Będziemy poddawać analizie próbkę o długości 50 000 obserwacji.

```{r}
nrow(probka)
```

Tak się prezentuje 10 początkowych obserwacji

```{r}
head(probka)
```

## 2.1 Transformacje danych

Interesować nas będą tylko zmienne **AgeClass, "Sex"BodyWeightKg, Best3BenchKg, Best3DeadliftKg, Best3SquatKg, TotalKg**

```{r}

probka <- probka[, c("AgeClass", "Sex", "BodyweightKg", "TotalKg")]

summary(probka)
```

Napotykamy pierwszy problem. Wszystkie zmienne są typu `character`, gdy powinny być typu

-   `numeric` dla **BodyweightKg, Best3BenchKg, Best3SquatKg, Best3DeadliftKg, TotalKg**

-   `factor` dla **AgeClass** oraz **Sex**

Dokonajmy więc konwersji

```{r}
probka$BodyweightKg <- as.numeric(probka$BodyweightKg)
probka$TotalKg      <- as.numeric(probka$TotalKg)

probka$AgeClass     <- as.factor(probka$AgeClass)
probka$Sex          <- as.factor(probka$Sex)
```

```{r}
summary(probka)
```

Dokonamy teraz zmiany nazw kolumn na bardziej przystępne

```{r}
colnames(probka) <- c("wiek", "plec", "masa", "total")
head(probka)
```

# 3. Histogramy

```{r}
#| code-fold: true
#| warning: false
#| layout-ncol: 2

# Plot normalized histograms for each level of the "wiek" factor

ggplot(probka, aes(x = wiek, y = ..count.., fill = ..count..)) +
  geom_bar(color = "black", alpha = 0.7, position = "identity") +
  ggtitle("Histogram - Wiek") + 
  theme_minimal()

ggplot(probka, aes(x = plec, y = ..count.., fill = ..count..)) +
  geom_bar(color = "black", alpha = 0.7, position = "identity") +
  ggtitle("Histogram - Wiek") + 
  theme_minimal()

ggplot(probka, aes(x = masa, y = ..density.., fill = ..density..)) +
  geom_histogram(binwidth = 7, color = "black", alpha = 0.7, position = "identity") +
  ggtitle("Histogram - Masa") +
  theme_minimal() +
  scale_y_continuous(labels = scales::percent_format(scale = 1))

ggplot(probka, aes(x = total, y = ..density.., fill = ..density..)) +
  geom_histogram(binwidth = 20, color = "black", alpha = 0.7, position = "identity") +
  ggtitle("Histogram - Total") +
  theme_minimal() +
  scale_y_continuous(labels = scales::percent_format(scale = 1))

```

# 4. Analiza zależności
